FROM registry.fedoraproject.org/fedora-silverblue:rawhide@sha256:777f02fa9d800c9992d46a336c34b53a96cbaaef591362cda7c0ea131d10c8ff as base

WORKDIR /tmp/install

# PERIMITER 81

RUN curl -sSL "https://static.perimeter81.com/agents/linux/Perimeter81_8.1.0.778.tar.xz" -o peri81.tar.xz && \
    mkdir ./perimeter81 && \
    tar -xf peri81.tar.xz -C ./perimeter81 --no-same-permissions --strip-components=1 && \
    rm ./peri81.tar.xz && \
    chmod -R 755 ./perimeter81/ && \
    mv ./perimeter81/ /usr/bin/ && \
    ostree container commit

COPY ./etc/ /etc/

RUN rpm-ostree install -y \
      gcc \
      code \
      micro \
      cascadia-fonts-all \
      fira-code-fonts \
      keepassxc \
      kitty \
      tailscale && \
      ln -s /usr/bin/ld.bfd /usr/bin/ld && \
      ln -s /usr/share/fontconfig/conf.avail/10-sub-pixel-bgr.conf /etc/fonts/conf.d && \
    rm -r /var/* && \
    ostree container commit

# ZOOM

RUN curl -sSL https://zoom.us/client/5.17.0.1682/zoom_x86_64.rpm -o zoom.rpm && \
    rpm2cpio zoom.rpm | cpio -di && mv ./opt/* /usr/share/ && cp ./usr/share/* -R /usr/share/ && \
    ln -s /usr/share/zoom/ZoomLauncher /usr/bin/zoom && \
    ostree container commit

# RIDER
ARG RIDER_VERSION=2023.3.2
RUN curl -sSL "https://download.jetbrains.com/rider/JetBrains.Rider-${RIDER_VERSION}.tar.gz" -o rider.tar.gz && \
   mkdir ./rider && \
   tar -xzf rider.tar.gz -C ./rider --no-same-permissions --strip-components=1 && \
   rm ./rider.tar.gz && \
   chmod -R 755 ./rider/ && \
   mv ./rider/ /usr/bin/ && \
   ostree container commit

# RUST

# only set env vars during install so the binaries and caches are separated
ARG CARGO_HOME=/usr/bin/.cargo
ARG RUSTUP_HOME=/usr/bin/.rustup

RUN echo "export PATH=${PATH}:${CARGO_HOME}/bin" >> /etc/custom/custom.sh && \
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --no-modify-path && \
    ostree container commit

# VSCODE

ARG VSCODE_USER_DATA_DIR=/usr/share/vscode
ARG VSCODE_EXTENSIONS=${VSCODE_USER_DATA_DIR}/extensions
ARG DONT_PROMPT_WSL_INSTALL=1

RUN code --install-extension ms-vscode-remote.remote-containers --no-sandbox --user-data-dir $VSCODE_USER_DATA_DIR  && \
    code --install-extension rust-lang.rust-analyzer --no-sandbox --user-data-dir $VSCODE_USER_DATA_DIR && \
    code --install-extension vadimcn.vscode-lldb --no-sandbox --user-data-dir $VSCODE_USER_DATA_DIR && \
    code --install-extension streetsidesoftware.code-spell-checker --no-sandbox --user-data-dir $VSCODE_USER_DATA_DIR && \
    code --install-extension luxcium.pop-n-lock-theme-vscode --no-sandbox --user-data-dir $VSCODE_USER_DATA_DIR && \
    echo "export VSCODE_EXTENSIONS=${VSCODE_EXTENSIONS}" >> /etc/custom.sh && \
    ostree container commit

# vscode-lld extension's adapter
RUN export CODE_LLDB_VER="$(curl -ILs -o /dev/null -w %{url_effective} https://github.com/vadimcn/codelldb/releases/latest | grep -Eo 'v([0-9\.]+)' | cut -c2- )" && \
    export CODE_LLDB_PATH="${VSCODE_EXTENSIONS}/vadimcn.vscode-lldb-${CODE_LLDB_VER}/" && \
    curl -sSf -L https://github.com/vadimcn/codelldb/releases/latest/download/codelldb-x86_64-linux.vsix -o /tmp/codelldb-x86_64-linux.zip && \
    mkdir -p /tmp/codelldb && unzip /tmp/codelldb-x86_64-linux.zip 'extension/*' -d /tmp/codelldb && \
    cp /tmp/codelldb/extension/* -R "$CODE_LLDB_PATH" && \
    touch "${CODE_LLDB_PATH}/platform.ok"

# STARSHIP

RUN curl -sSL https://starship.rs/install.sh -o ./install.sh && \
    chmod +x ./install.sh && ./install.sh --yes --bin-dir /usr/bin && rm ./install.sh && \
    ostree container commit

# ROOZ
ARG ROOZ_VER=0.48.0
RUN curl -sSL https://github.com/queil/rooz/releases/download/v${ROOZ_VER}/rooz -o ./rooz && chmod +x ./rooz && sudo mv ./rooz /usr/bin && \
    ostree container commit

RUN echo ". /etc/custom/custom.sh" >> /etc/bashrc && \
	ln -s /etc/custom/init.sh /usr/bin/queil-init.sh && \
    chmod +x /usr/bin/queil-init.sh && \
    ln -s /etc/custom/init.service /lib/systemd/system/queil-init.service && \
    ostree container commit
